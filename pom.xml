<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.18</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    
    <groupId>com.example</groupId>
    <artifactId>webapp</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    
    <properties>
        <java.version>17</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <org.mapstruct.version>1.5.3.Final</org.mapstruct.version>
        <org.projectlombok.version>1.18.26</org.projectlombok.version>
        <weblogic.autodeploy.dir>D:\oracle\ORACLE_HOME\user_projects\domains\base_domain\autodeploy</weblogic.autodeploy.dir>
        <jte.version>3.2.0</jte.version>
        
        <!-- Remote WebLogic deployment properties -->
        <remote.weblogic.host>remote-weblogic-host</remote.weblogic.host>
        <remote.weblogic.port>22</remote.weblogic.port>
        <remote.weblogic.username>weblogic-user</remote.weblogic.username>
        <remote.weblogic.autodeploy.dir>/path/to/autodeploy</remote.weblogic.autodeploy.dir>
    </properties>
    
    <!-- Profile configuration for development and production environments -->
    <profiles>
        <profile>
            <!-- Development profile (default) - JAR packaging with embedded Tomcat -->
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <activateProfile>dev</activateProfile>
                <spring.profiles.active>dev</spring.profiles.active>
                <packaging.type>jar</packaging.type>
            </properties>
        </profile>
        <profile>
            <!-- Production profile - WAR packaging for WebLogic deployment -->
            <id>prod</id>
            <properties>
                <activateProfile>prod</activateProfile>
                <spring.profiles.active>prod</spring.profiles.active>
                <packaging.type>war</packaging.type>
            </properties>
            <build>
                <plugins>
                    <!-- JTE Precompilation -->
                    <plugin>
                        <groupId>gg.jte</groupId>
                        <artifactId>jte-maven-plugin</artifactId>
                        <version>${jte.version}</version>
                        <executions>
                            <execution>
                                <phase>process-classes</phase>
                                <goals>
                                    <goal>precompile</goal>
                                </goals>
                                <configuration>
                                    <sourceDirectory>${basedir}/src/main/jte</sourceDirectory>
                                    <targetDirectory>${basedir}/jte-classes</targetDirectory>
                                    <contentType>Html</contentType>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    
                    <!-- Include jte-classes in WAR for WebLogic -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <configuration>
                            <webResources>
                                <resource>
                                    <directory>${basedir}/jte-classes</directory>
                                    <targetPath>WEB-INF/classes</targetPath>
                                </resource>
                            </webResources>
                        </configuration>
                    </plugin>
                    
                    <!-- Auto-deploy to WebLogic -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>deploy-to-weblogic</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo message="Copierea WAR-ului în directorul de autodeploy al WebLogic"/>
                                        <copy file="${project.build.directory}/${project.build.finalName}.war"
                                              todir="${weblogic.autodeploy.dir}"
                                              overwrite="true" />
                                        <echo message="WAR copiat cu succes în ${weblogic.autodeploy.dir}"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <!-- Remote deployment profile - WAR packaging for remote WebLogic deployment -->
            <id>remote-deploy</id>
            <properties>
                <activateProfile>prod</activateProfile>
                <spring.profiles.active>prod</spring.profiles.active>
                <packaging.type>war</packaging.type>
            </properties>
            <build>
                <plugins>
                    <!-- Deploy to Remote WebLogic server -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>wagon-maven-plugin</artifactId>
                        <version>2.0.2</version>
                        <executions>
                            <execution>
                                <id>upload-war</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>upload-single</goal>
                                </goals>
                                <configuration>
                                    <fromFile>${project.build.directory}/${project.build.finalName}.war</fromFile>
                                    <url>scp://${remote.weblogic.username}@${remote.weblogic.host}:${remote.weblogic.port}</url>
                                    <toFile>${remote.weblogic.autodeploy.dir}/${project.build.finalName}.war</toFile>
                                    <serverId>remote-weblogic</serverId>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    
    <!-- Dynamic packaging type based on active profile -->
    <packaging>${packaging.type}</packaging>
    
    <dependencies>
        <!-- Spring Boot Web Starter -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        
        <!-- JTE (Java Template Engine) -->
        <dependency>
            <groupId>gg.jte</groupId>
            <artifactId>jte</artifactId>
            <version>${jte.version}</version>
        </dependency>
        <dependency>
            <groupId>gg.jte</groupId>
            <artifactId>jte-spring-boot-starter-2</artifactId>
            <version>${jte.version}</version>
        </dependency>
        
        <!-- WebJars pentru Bootstrap 5 și htmx -->
        <!-- <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>webjars-locator-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>5.3.5</version>
        </dependency>
        <dependency>
            <groupId>org.webjars.npm</groupId>
            <artifactId>htmx.org</artifactId>
            <version>2.0.4</version>
        </dependency> -->
        
        <!-- Spring Data JPA -->
        <!-- <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency> -->
        
        <!-- Oracle Database Driver -->
        <!-- <dependency>
            <groupId>com.oracle.database.jdbc</groupId>
            <artifactId>ojdbc8</artifactId>
        </dependency> -->
        
        <!-- Spring Boot DevTools -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        
        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        
        <!-- MapStruct -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>
        
        <!-- Jackson DataBind -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        
        <!-- Jackson JAXB Annotations - necesar pentru LogstashEncoder -->
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-jaxb-annotations</artifactId>
        </dependency>
        
        <!-- For WAR packaging - provided scope for embedded server -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <!-- Test dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        
        <!-- Logstash Logback Encoder pentru format NDJSON -->
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>6.6</version>  <!-- Versiune compatibilă cu Logback 1.2.x -->
        </dependency>
        
        <!-- Janino pentru evaluare condiții în Logback -->
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
            <version>3.1.9</version>
        </dependency>
    </dependencies>
    
    <build>
        <plugins>
            <!-- Spring Boot Maven Plugin -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            
            <!-- Maven Compiler Plugin for MapStruct annotation processing -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${org.mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${org.projectlombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>0.2.0</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>